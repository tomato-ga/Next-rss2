[{"/Volumes/SSD_1TB/next-antena2/front/src/auth/Account.js":"1","/Volumes/SSD_1TB/next-antena2/front/src/auth/email.js":"2","/Volumes/SSD_1TB/next-antena2/front/src/auth/signIn.js":"3","/Volumes/SSD_1TB/next-antena2/front/src/auth/supabaseClient.js":"4","/Volumes/SSD_1TB/next-antena2/front/src/components/Clickcount.js":"5","/Volumes/SSD_1TB/next-antena2/front/src/components/Comment.js":"6","/Volumes/SSD_1TB/next-antena2/front/src/components/Favs.js":"7","/Volumes/SSD_1TB/next-antena2/front/src/components/Footer.js":"8","/Volumes/SSD_1TB/next-antena2/front/src/components/Header.js":"9","/Volumes/SSD_1TB/next-antena2/front/src/components/Localrireki.js":"10","/Volumes/SSD_1TB/next-antena2/front/src/components/NewSide.js":"11","/Volumes/SSD_1TB/next-antena2/front/src/components/Pagination.js":"12","/Volumes/SSD_1TB/next-antena2/front/src/components/PopularMovies.js":"13","/Volumes/SSD_1TB/next-antena2/front/src/components/PopularTags.js":"14","/Volumes/SSD_1TB/next-antena2/front/src/components/RelatedTagPosts.js":"15","/Volumes/SSD_1TB/next-antena2/front/src/components/Rsslist.js":"16","/Volumes/SSD_1TB/next-antena2/front/src/components/SearchBar.js":"17","/Volumes/SSD_1TB/next-antena2/front/src/components/Sidebar.js":"18","/Volumes/SSD_1TB/next-antena2/front/src/components/Tags.js":"19","/Volumes/SSD_1TB/next-antena2/front/src/components/pages.js":"20","/Volumes/SSD_1TB/next-antena2/front/src/components/useFetchRssItems.js":"21","/Volumes/SSD_1TB/next-antena2/front/src/components/useFetchTotalCount.js":"22","/Volumes/SSD_1TB/next-antena2/front/src/context/DataContext.js":"23","/Volumes/SSD_1TB/next-antena2/front/src/hooks/usePagination.js":"24","/Volumes/SSD_1TB/next-antena2/front/src/hooks/useSearchPagination.js":"25","/Volumes/SSD_1TB/next-antena2/front/src/hooks/useTagPagination.js":"26","/Volumes/SSD_1TB/next-antena2/front/src/hooks/useTotalCount.js":"27","/Volumes/SSD_1TB/next-antena2/front/src/lib/clickCountDB.js":"28","/Volumes/SSD_1TB/next-antena2/front/src/lib/gaPv.js":"29","/Volumes/SSD_1TB/next-antena2/front/src/lib/gtag.js":"30","/Volumes/SSD_1TB/next-antena2/front/src/lib/shuffle.js":"31","/Volumes/SSD_1TB/next-antena2/front/src/pages/Mostpopular.js":"32","/Volumes/SSD_1TB/next-antena2/front/src/pages/[siteId]/[itemId].js":"33","/Volumes/SSD_1TB/next-antena2/front/src/pages/_app.js":"34","/Volumes/SSD_1TB/next-antena2/front/src/pages/_document.js":"35","/Volumes/SSD_1TB/next-antena2/front/src/pages/favpage.js":"36","/Volumes/SSD_1TB/next-antena2/front/src/pages/index.js":"37","/Volumes/SSD_1TB/next-antena2/front/src/pages/page/[number].js":"38","/Volumes/SSD_1TB/next-antena2/front/src/pages/rireki.js":"39","/Volumes/SSD_1TB/next-antena2/front/src/pages/search/[keyword]/page/[pageNumber].js":"40","/Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js":"41","/Volumes/SSD_1TB/next-antena2/front/src/pages/topSSR.js":"42","/Volumes/SSD_1TB/next-antena2/front/src/store/dataSlice.js":"43","/Volumes/SSD_1TB/next-antena2/front/src/store/store.js":"44"},{"size":192,"mtime":1691230846000,"results":"45","hashOfConfig":"46"},{"size":212,"mtime":1691230846000,"results":"47","hashOfConfig":"46"},{"size":565,"mtime":1691230846000,"results":"48","hashOfConfig":"46"},{"size":248,"mtime":1691230846000,"results":"49","hashOfConfig":"46"},{"size":1330,"mtime":1692196006000,"results":"50","hashOfConfig":"46"},{"size":3289,"mtime":1692196006000,"results":"51","hashOfConfig":"46"},{"size":4532,"mtime":1692016285000,"results":"52","hashOfConfig":"46"},{"size":6987,"mtime":1691880679000,"results":"53","hashOfConfig":"46"},{"size":6140,"mtime":1692178133000,"results":"54","hashOfConfig":"46"},{"size":1377,"mtime":1691880679000,"results":"55","hashOfConfig":"46"},{"size":9339,"mtime":1691493223000,"results":"56","hashOfConfig":"46"},{"size":2635,"mtime":1692363788000,"results":"57","hashOfConfig":"46"},{"size":3034,"mtime":1692365067000,"results":"58","hashOfConfig":"46"},{"size":1666,"mtime":1692349684000,"results":"59","hashOfConfig":"46"},{"size":2218,"mtime":1692367605000,"results":"60","hashOfConfig":"46"},{"size":3249,"mtime":1690359025000,"results":"61","hashOfConfig":"46"},{"size":1480,"mtime":1691880679000,"results":"62","hashOfConfig":"46"},{"size":1298,"mtime":1692196006000,"results":"63","hashOfConfig":"46"},{"size":649,"mtime":1691880679000,"results":"64","hashOfConfig":"46"},{"size":4709,"mtime":1692196006000,"results":"65","hashOfConfig":"46"},{"size":997,"mtime":1692196006000,"results":"66","hashOfConfig":"46"},{"size":839,"mtime":1692196006000,"results":"67","hashOfConfig":"46"},{"size":220,"mtime":1691285630000,"results":"68","hashOfConfig":"46"},{"size":752,"mtime":1690599706000,"results":"69","hashOfConfig":"46"},{"size":953,"mtime":1690599710000,"results":"70","hashOfConfig":"46"},{"size":1401,"mtime":1692350561000,"results":"71","hashOfConfig":"46"},{"size":414,"mtime":1690273806000,"results":"72","hashOfConfig":"46"},{"size":1666,"mtime":1692196006000,"results":"73","hashOfConfig":"46"},{"size":174,"mtime":1691904725000,"results":"74","hashOfConfig":"46"},{"size":714,"mtime":1691917143000,"results":"75","hashOfConfig":"46"},{"size":398,"mtime":1689558956000,"results":"76","hashOfConfig":"46"},{"size":4760,"mtime":1692196006000,"results":"77","hashOfConfig":"46"},{"size":4167,"mtime":1692367698000,"results":"78","hashOfConfig":"46"},{"size":936,"mtime":1692196006000,"results":"79","hashOfConfig":"46"},{"size":231,"mtime":1688116376000,"results":"80","hashOfConfig":"46"},{"size":5641,"mtime":1692365639000,"results":"81","hashOfConfig":"46"},{"size":2414,"mtime":1692363634000,"results":"82","hashOfConfig":"46"},{"size":1230,"mtime":1692363561000,"results":"83","hashOfConfig":"46"},{"size":5574,"mtime":1692365666000,"results":"84","hashOfConfig":"46"},{"size":5676,"mtime":1692365346000,"results":"85","hashOfConfig":"46"},{"size":5646,"mtime":1692365296000,"results":"86","hashOfConfig":"46"},{"size":8133,"mtime":1692365358000,"results":"87","hashOfConfig":"46"},{"size":736,"mtime":1691285630000,"results":"88","hashOfConfig":"46"},{"size":321,"mtime":1691286846000,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5iiqlq",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/SSD_1TB/next-antena2/front/src/auth/Account.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/auth/email.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/auth/signIn.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/auth/supabaseClient.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Clickcount.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Comment.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Favs.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Footer.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Header.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Localrireki.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/NewSide.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Pagination.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/PopularMovies.js",["230"],[],"import Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\n\n\nconst PopularMovies = ({ popumoviesRes }) => {\n\n    // const [data, setData] = useState([]);\n\n\n    // useEffect(() => {\n    //     const fetchData = async () => {\n    //         try {\n    //             const ENDP = `https://api.erorice.com/top_movies`;\n    //             const res = await fetch(ENDP);\n    //             const data = await res.json();\n    //             setData(data);\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n    //     }\n\n    //     fetchData();\n    // }, [])\n\n\n\n    return (\n        <div className=\"justify-center text-center font-bold\">\n            <h2 className=\"mb-4\">\n                <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n                    <Link href=\"/Mostpopular\">\n                    人気動画\n                    </Link>\n                </span>\n            </h2>\n            \n            <div className=\"flex flex-wrap justify-center sm:grid-cols-2 lg:flex gap-3\">\n                {popumoviesRes.map((movie, movieIndex) => (\n                    <div key={movieIndex} className=\"mr-3 mb-3 flex flex-col\">\n                        <div className=\"relative w-[160px] h-[150px] md:w-[180px] md:h-[170px] mx-auto\">\n                            <Link href=\"/[siteId]/[itemId]\" as={`/${movie.rss.site_id}/${movie.rss.id}`}>\n                                <div className=\"absolute inset-0\">\n                                    <img src={movie.rss.imgurl} className=\"w-full h-full object-cover\" alt={movie.rss.title} />\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n    \n// 2023/08/18 Imageコンポーネントを削除してimgタグへ変更した\n\n// ImageコンポーネントのときのJSX\n//     return (\n//     <div className=\"justify-center text-center font-bold\">\n//         <h2 className=\"mb-4\">\n//             <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n//                 <Link href=\"/Mostpopular\">\n//                 人気動画\n//                 </Link>\n//             </span>\n//         </h2>\n        \n//         <div className=\"flex flex-wrap justify-center sm:grid-cols-2 lg:flex gap-3\">\n//             {popumoviesRes.map((movie, movieIndex) => (\n//                 <div key={movieIndex} className=\"mr-3 mb-3 flex flex-col\">\n//                     <div className=\"relative flex justify-center items-center h-[150px] w-[160px] md:h-[170px] md:w-[180px] mx-auto\">\n//                         <Link href=\"/[siteId]/[itemId]\" as={`/${movie.rss.site_id}/${movie.rss.id}`}>\n//                             <Image fill src={movie.rss.imgurl} alt={movie.rss.title}  />\n//                         </Link>\n//                     </div>\n//                 </div>\n\n//             ))}\n//         </div>\n//     </div>\n// );\n}\n\n\n\nexport default PopularMovies;","/Volumes/SSD_1TB/next-antena2/front/src/components/PopularTags.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/RelatedTagPosts.js",["231"],[],"import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Tags from './Tags';\nimport Image from 'next/image';\nimport styles from './iiim.module.css'\nimport FetchClickCounts from './Clickcount';\nimport { handleClickCount } from '@/lib/clickCountDB';\n\n\nconst RelatedTagPosts = ({ tag }) => {\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchRelatedPosts = async () => {\n      try {\n        const response = await fetch(`https://api.erorice.com/tag?tag=${tag}`);\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchRelatedPosts();\n  }, [tag]);\n\n  if (!posts.length) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className='mt-5 mb-3 p-2 font-bold text-2xl bg-slate-400 text-black'>\n      <h2>「{tag}」の関連動画</h2>\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 p-1\">\n      {posts.map((post) => {\n            const tagsArray = post.tag.split(',').map(tag => tag.trim());\n            return (\n                <div key={post.id} className=\"border-gray-300 rounded-lg shadow-lg\">\n                  <div onClick={() => { handleClickCount(post.id) }}>\n                    <Link href=\"/[siteId]/[itemId]\" as={`/${post.site_id}/${post.id}`}>\n                    <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                      <img src={post.imgurl} className=\"w-full h-full object-cover\" alt={post.title} />\n              \n                                      <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                          <FetchClickCounts itemId={post.id} />\n                                      </span>\n                    </div>\n                    <p className=\"m-2 text-sm md:text-xl font-bold text-blue-600\">{post.title}</p>\n                    </Link>\n                    <Tags tagsArray={tagsArray} numberTags={5} />\n                </div>\n                </div>\n            )\n            })}\n      </div>\n    </div>\n  );\n};\n\nexport default RelatedTagPosts;\n","/Volumes/SSD_1TB/next-antena2/front/src/components/Rsslist.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/SearchBar.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Sidebar.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/Tags.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/pages.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/useFetchRssItems.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/components/useFetchTotalCount.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/context/DataContext.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/hooks/usePagination.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/hooks/useSearchPagination.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/hooks/useTagPagination.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/hooks/useTotalCount.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/lib/clickCountDB.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/lib/gaPv.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/lib/gtag.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/lib/shuffle.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/Mostpopular.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/[siteId]/[itemId].js",["232","233"],[],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Header from '@/components/Header';\nimport Sidebar from '@/components/Sidebar';\nimport RelatedTagPosts from '@/components/RelatedTagPosts';\nimport Comment from '@/components/Comment';\nimport Tags from '@/components/Tags';\nimport Link from 'next/link';\nimport FetchClickCounts from '@/components/Clickcount';\nimport Localrireki from '@/components/Localrireki';\nimport { handleClickCount } from '@/lib/clickCountDB';\nimport Fav from '@/components/Favs';\nimport { handleFavCount } from '@/lib/clickCountDB';\nimport Footer from '@/components/Footer';\nimport SearchBar from '@/components/SearchBar';\nimport { NextSeo } from 'next-seo';\n\n// TODO このSSRのときに、関連記事もSSRするようにすればOK RelatedTagPostsはコンポーネントなだけだから、SSRできない\nexport async function getServerSideProps(context) {\n  const { siteId, itemId } = context.params;\n  const ENDP = `https://api.erorice.com/sites/rss/${itemId}`;\n  const res = await fetch(ENDP);\n  const data = await res.json();\n\n  const tags = data[0]?.tag.split(',');\n\n  return {\n    props: {\n      data,\n      tags,\n    }\n  };\n}\n\nconst Posts = ({ data }) => {\n\n  const [localData, setLocalData] = useState([]);\n\n  useEffect(() => {\n    if (!data) return;\n\n    let savedArticles = JSON.parse(localStorage.getItem('articleData')) || [];\n    let currentTime = new Date().toISOString();\n    let newDataWithTimestamp = { ...data[0], timestamp: currentTime };\n    const isArticleExist = savedArticles.some(article => article[0].id === newDataWithTimestamp.id);\n\n    if (isArticleExist) {\n      savedArticles = savedArticles.filter(article => article[0].id !== newDataWithTimestamp.id);\n    }\n\n    if (savedArticles.length === 500) {\n      savedArticles.pop();\n    }\n\n    savedArticles.unshift([newDataWithTimestamp]);\n    localStorage.setItem('articleData', JSON.stringify(savedArticles));\n\n    const checkSavedArticles = () => {\n      let savedbrowserArticles = JSON.parse(localStorage.getItem('articleData')) || [];\n      savedbrowserArticles.sort((a, b) => new Date(b[0].timestamp) - new Date(a[0].timestamp));\n      if (savedbrowserArticles) {\n        setLocalData(savedbrowserArticles);\n      }\n    };\n\n    checkSavedArticles();\n  }, [data]);\n\n  if (!data) {\n    return <p>ロード中です。もしかしたらデータないかも</p>;\n  }\n\n  let tags = data[0].tag.split(',');\n\n  return (\n    <div>\n      <NextSeo \n        title={data[0].title}\n        description={data[0].description} \n        canonical={`http://localhost:3000/${data[0].site_id}/${data[0].id}`}\n      />\n      <Header />\n      <SearchBar />\n\n      <div className='container mx-auto px-4 py-6 flex flex-col-reverse md:flex-row'>\n          <Sidebar />\n          <div className='md:w-3/4 md:ml-4 overflow-hidden'>\n              <h1 className=\"m-2 text-xl md:text-4xl font-bold text-blue-600 border-b pb-2\">{data[0].title}</h1>\n              <div className='grid md:grid-cols-2 gap-2'>\n                  <div className='desc p-5'>\n                      {<img src={data[0].imgurl}></img>}\n                  </div>\n                  <div className='p-2 md:p-4'>\n                    <Tags tagsArray={tags} numberTags={20}/>\n                    <Fav postId={data[0].id} articleData={data} />\n                  </div>\n                  <div className='p-2 md:p-4'></div>\n              </div>\n              <div className='text-2xl bg-blue-700 text-white text-center font-semibold hover:bg-orange-700 rounded-md'>\n                  <h3><a href={data[0].link} target='_blank'>{data[0].title}のページを見る</a></h3>\n              </div>\n              <div className='mt-5 mb-3 p-2 font-bold text-2xl bg-slate-400 text-black'>\n                      <h2>最近チェックした動画</h2>\n              </div>\n              <div className=\"relative\">\n                  <Localrireki localData={localData} />\n              </div>\n              <RelatedTagPosts tag={tags[0]} />\n          </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Posts;\n","/Volumes/SSD_1TB/next-antena2/front/src/pages/_app.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/_document.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/favpage.js",["234"],[],"// /Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '@/components/Header';\nimport Sidebar from '@/components/Sidebar';\nimport Tags from '@/components/Tags';\nimport Pagination from '@/components/Pagination';\nimport useTotalCount from '@/hooks/useTotalCount';\nimport Link from 'next/link';\nimport styles from '@/components/iiim.module.css'\nimport Image from 'next/image';\nimport useTagPagination from '@/hooks/useTagPagination';\nimport { useRouter } from 'next/router';\nimport FetchClickCounts from '@/components/Clickcount';\nimport { handleClickCount } from '@/lib/clickCountDB';\n\nimport SearchBar from '@/components/SearchBar';\nimport PopularMovies from '@/components/PopularMovies';\nimport PopularTags from '@/components/PopularTags';\nimport Footer from '@/components/Footer';\n\n\nconst FavPage = () => {\n\n    const [localData, setLocalData] = useState([]);\n\n    useEffect(() => {\n    \n        const checkSavedArticles = () => {\n          let savedbrowserArticles = JSON.parse(localStorage.getItem('favArticleData')) || [];\n    \n          // タイムスタンプに基づいて記事をソート\n          savedbrowserArticles.sort((a, b) => new Date(b[0].timestamp) - new Date(a[0].timestamp));\n    \n          if (savedbrowserArticles) {\n            setLocalData(savedbrowserArticles);\n          }\n        };\n    \n        checkSavedArticles();\n    }, []);\n\n    return (\n        <>\n            <Header />\n            <SearchBar />\n    \n            <div className=\"justify-center text-center font-bold\">\n                <h2 className=\"mb-4\">\n                    <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n                        お気に入り動画\n                    </span>\n                </h2>\n            </div>\n    \n            <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n                <Sidebar />\n                <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n                    {localData.map((innerArray, outerIndex) => {\n                        return innerArray.map((item, innerIndex) => {\n                            let date = item.published_at ? new Date(item.published_at) : null;\n                            let formattedDate = \"\";\n                            if (date && !isNaN(date.getTime())) {\n                                formattedDate = new Intl.DateTimeFormat('ja-JP', {\n                                    year: 'numeric', month: '2-digit', day: '2-digit',\n                                    hour: '2-digit', minute: '2-digit', second: '2-digit'\n                                }).format(date);\n                            }\n                            let tagsArray = item.tag ? item.tag.split(',').map(tag => tag.trim()) : [];\n    \n                            return (\n                                <div key={`${outerIndex}-${innerIndex}`} className='border-gray-300 rounded shadow-md'>\n                                    <div onClick={() => { handleClickCount(item.id) }}>\n                                        <div className='border-gray-200'>\n                                            <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n                                                \n                                            <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                                <img src={item.imgurl} className=\"w-full h-full object-cover\" alt={item.title} />\n                        \n                                                <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                                    <FetchClickCounts itemId={item.id} />\n                                                </span>\n                                            </div>  \n                                                {/* <div className=\"relative h-[170px] w-full md:h-[320px] md:w-full\">\n                                                    <Image fill src={item.imgurl} className=\"object-cover\" alt={item.title} sizes=\"(max-width: 600px) 50vw, (max-width: 768px) 100vw, (max-width: 1200px) 50vw\"/>\n                                                    <FetchClickCounts itemId={item.id}/>\n                                                </div> */}\n                                                <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n                                                    {item.title}\n                                                </h2>\n                                            </Link>\n                                            <div className='tags'>\n                                                <Tags tagsArray={tagsArray} numberTags={5}/>\n                                            </div>\n                                            {/* <div className='date px-2 align-sub text-gray-500'>\n                                                {date && <p>{formattedDate}</p>}\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        });\n                    })}\n                    {/* Pagination component will go here if needed */}\n                </div>\n            </div>\n            <Footer />\n        </>\n    );\n    \n}\n\nexport default FavPage;\n","/Volumes/SSD_1TB/next-antena2/front/src/pages/index.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/page/[number].js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/pages/rireki.js",["235"],[],"// /Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '@/components/Header';\nimport Sidebar from '@/components/Sidebar';\nimport Tags from '@/components/Tags';\nimport Pagination from '@/components/Pagination';\nimport useTotalCount from '@/hooks/useTotalCount';\nimport Link from 'next/link';\nimport styles from '@/components/iiim.module.css'\nimport Image from 'next/image';\nimport useTagPagination from '@/hooks/useTagPagination';\nimport { useRouter } from 'next/router';\nimport FetchClickCounts from '@/components/Clickcount';\nimport { handleClickCount } from '@/lib/clickCountDB';\n\nimport SearchBar from '@/components/SearchBar';\nimport PopularMovies from '@/components/PopularMovies';\nimport PopularTags from '@/components/PopularTags';\nimport Footer from '@/components/Footer';\n\n\nconst FavPage = () => {\n\n    const [localData, setLocalData] = useState([]);\n\n    useEffect(() => {\n    \n        const checkSavedArticles = () => {\n          let savedbrowserArticles = JSON.parse(localStorage.getItem('articleData')) || [];\n    \n          // タイムスタンプに基づいて記事をソート\n          savedbrowserArticles.sort((a, b) => new Date(b[0].timestamp) - new Date(a[0].timestamp));\n    \n          if (savedbrowserArticles) {\n            setLocalData(savedbrowserArticles);\n          }\n        };\n    \n        checkSavedArticles();\n    }, []);\n\n    return (\n        <>\n            <Header />\n            <SearchBar />\n    \n            <div className=\"justify-center text-center font-bold\">\n                <h2 className=\"mb-4\">\n                    <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n                        閲覧履歴\n                    </span>\n                </h2>\n            </div>\n    \n            <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n                <Sidebar />\n                <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n                    {localData.map((innerArray, outerIndex) => {\n                        return innerArray.map((item, innerIndex) => {\n                            let date = item.published_at ? new Date(item.published_at) : null;\n                            let formattedDate = \"\";\n                            if (date && !isNaN(date.getTime())) {\n                                formattedDate = new Intl.DateTimeFormat('ja-JP', {\n                                    year: 'numeric', month: '2-digit', day: '2-digit',\n                                    hour: '2-digit', minute: '2-digit', second: '2-digit'\n                                }).format(date);\n                            }\n                            let tagsArray = item.tag ? item.tag.split(',').map(tag => tag.trim()) : [];\n    \n                            return (\n                                <div key={`${outerIndex}-${innerIndex}`} className='border-gray-300 rounded shadow-md'>\n                                    <div onClick={() => { handleClickCount(item.id) }}>\n                                        <div className='border-gray-200'>\n                                            <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n                                            <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                                <img src={item.imgurl} className=\"w-full h-full object-cover\" alt={item.title} />\n                    \n                                                <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                                    <FetchClickCounts itemId={item.id} />\n                                                </span>\n                                            </div>\n                                                {/* <div className=\"relative h-[170px] w-full md:h-[320px] md:w-full\">\n                                                    <Image fill src={item.imgurl} className=\"object-cover\" alt={item.title} sizes=\"(max-width: 600px) 50vw, (max-width: 768px) 100vw, (max-width: 1200px) 50vw\"/>\n                                                    <FetchClickCounts itemId={item.id}/>\n                                                </div> */}\n                                                <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n                                                    {item.title}\n                                                </h2>\n                                            </Link>\n                                            <div className='tags'>\n                                                <Tags tagsArray={tagsArray} numberTags={5}/>\n                                            </div>\n                                            {/* <div className='date px-2 align-sub text-gray-500'>\n                                                {date && <p>{formattedDate}</p>}\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        });\n                    })}\n                    {/* Pagination component will go here if needed */}\n                </div>\n            </div>\n            <Footer />\n        </>\n    );\n    \n}\n\nexport default FavPage;\n","/Volumes/SSD_1TB/next-antena2/front/src/pages/search/[keyword]/page/[pageNumber].js",["236"],[],"// /Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js\n\nimport React, { useEffect } from 'react';\nimport Header from '@/components/Header';\nimport Sidebar from '@/components/Sidebar';\nimport Tags from '@/components/Tags';\nimport Pagination from '@/components/Pagination';\nimport useTotalCount from '@/hooks/useTotalCount';\nimport Link from 'next/link';\nimport styles from '@/components/iiim.module.css'\nimport Image from 'next/image';\nimport useSearchPagination from '@/hooks/useSearchPagination';\nimport { useRouter } from 'next/router';\nimport { handleClickCount } from '@/lib/clickCountDB';\nimport FetchClickCounts from '@/components/Clickcount';\n\nimport SearchBar from '@/components/SearchBar';\nimport PopularMovies from '@/components/PopularMovies';\nimport PopularTags from '@/components/PopularTags';\nimport Footer from '@/components/Footer';\n\n\nconst SearchPage = ({ posts, totalCount, keyword, pageNumber, pageSize }) => {\n    const router = useRouter();\n\n    const totalPages = Math.ceil(totalCount.count / pageSize);\n\n    const changePage = (newPage) => {\n    router.push(`/search/${keyword}/page/${newPage}`);\n    };\n\n\n    return (\n        <>\n        <Header />\n        <SearchBar />\n\n        <div className=\"justify-center text-center font-bold\">\n            <h2 className=\"mb-4\">\n                <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n                {keyword}の関連動画\n                </span>\n            </h2>\n        </div>\n\n        <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n            <Sidebar />\n            <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n                {posts.map((item, index) => {\n                    let date = item.published_at ? new Date(item.published_at) : null;\n                    let formattedDate = \"\";\n    \n                    if (date && !isNaN(date.getTime())) { // Check if date is valid\n                        formattedDate = new Intl.DateTimeFormat('ja-JP', {\n                            year: 'numeric', month: '2-digit', day: '2-digit',\n                            hour: '2-digit', minute: '2-digit', second: '2-digit'\n                        }).format(date);\n                    } else {\n                        console.error(\"Invalid date: \", item.published_at);\n                    }\n                    let tagsArray = [];\n                    if (item.tag) {\n                        tagsArray = item.tag.split(',').map(tag => tag.trim());\n                    }\n                    return (\n                        <div key={index} className='border-gray-300 rounded shadow-md'>\n                            <div onClick={() => { handleClickCount(item.id) }}>\n\n                            <div className='border-gray-200'>\n                                <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n                                        <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                            <img src={item.imgurl} className=\"w-full h-full object-cover\" alt={item.title} />\n                    \n                                            <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                                <FetchClickCounts itemId={item.id} />\n                                            </span>\n                                        </div>\n                                    {/* <div className=\"relative h-[170px] w-full md:h-[320px] md:w-full\">\n                                        <Image fill src={item.imgurl} className=\"object-cover\" alt={item.title} sizes=\"(max-width: 600px) 50vw, (max-width: 768px) 100vw, (max-width: 1200px) 50vw\"/>\n                                        <FetchClickCounts itemId={item.id}/>\n\n                                    </div> */}\n                                    <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n                                        {item.title}\n                                    </h2>\n                                </Link>\n                                <div className='tags'>\n                                <Tags tagsArray={tagsArray} numberTags={5}/>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n                    );\n                })}\n                <Pagination \n                totalCount={totalCount} \n                pageSize={pageSize} \n                currentPage={pageNumber} \n                changePage={changePage}\n                pageChangeUrl={(page) => {\n                    return `/tag/${keyword}/page/${page}`;\n                }}\n                />\n            </div>\n        </div>\n    <Footer />\n        </>\n    );\n}\n\n\nexport async function getServerSideProps({ params }) {\n    const pageSize = 20;\n    const keyword = params.keyword;\n    const pageNumber = params.pageNumber || 1;\n\n    // SSRのためにデータフェッチを直接行う\n    const fetchUrl = `https://api.erorice.com/search?tag=${keyword}&page=${pageNumber}&limit=${pageSize}`;\n    const res = await fetch(fetchUrl);\n    const posts = await res.json();\n\n    const totalRes = await fetch(`https://api.erorice.com/search_count?tag=${keyword}`);\n    const totalCount = await totalRes.json();\n\n    return {\n    props: {\n        posts,\n        totalCount,\n        keyword,\n        pageNumber: parseInt(pageNumber),\n        pageSize,\n    }\n    };\n}\n\n\nexport default SearchPage;\n","/Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js",["237"],[],"// /Volumes/SSD_1TB/next-antena2/front/src/pages/tag/[tagpage]/page/[pageNumber].js\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '@/components/Header';\nimport Sidebar from '@/components/Sidebar';\nimport Tags from '@/components/Tags';\nimport Pagination from '@/components/Pagination';\nimport useTotalCount from '@/hooks/useTotalCount';\nimport Link from 'next/link';\nimport styles from '@/components/iiim.module.css'\nimport Image from 'next/image';\nimport useTagPagination from '@/hooks/useTagPagination';\nimport { useRouter } from 'next/router';\nimport FetchClickCounts from '@/components/Clickcount';\nimport { handleClickCount } from '@/lib/clickCountDB';\n\nimport SearchBar from '@/components/SearchBar';\nimport PopularMovies from '@/components/PopularMovies';\nimport PopularTags from '@/components/PopularTags';\nimport Footer from '@/components/Footer';\n\n\nconst TagPage = ({ tagpage, posts, totalCount, pageNumber, pageSize }) => {\n\n    const totalPages = Math.ceil(totalCount.count / pageSize);\n\n    const router = useRouter();\n    const changePage = (newPage) => {\n    router.push(`/tag/${tagpage}/page/${newPage}`);\n    };\n\n    return (\n    <>\n        <Header />\n        <SearchBar />\n        <div className=\"justify-center text-center font-bold\">\n            <h2 className=\"mb-4\">\n                <span className=\"border-b-2 pb-1 border-blue-300 text-2xl\">\n                {tagpage}の関連動画\n                </span>\n            </h2>\n        </div>\n\n        <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n            <Sidebar />\n            <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n                {posts.map((item, index) => {\n                    let date = item.published_at ? new Date(item.published_at) : null;\n                    let formattedDate = \"\";\n    \n                    if (date && !isNaN(date.getTime())) { // Check if date is valid\n                        formattedDate = new Intl.DateTimeFormat('ja-JP', {\n                            year: 'numeric', month: '2-digit', day: '2-digit',\n                            hour: '2-digit', minute: '2-digit', second: '2-digit'\n                        }).format(date);\n                    } else {\n                        console.error(\"Invalid date: \", item.published_at);\n                    }\n                    let tagsArray = [];\n                    if (item.tag) {\n                        tagsArray = item.tag.split(',').map(tag => tag.trim());\n                    }\n                    return (\n                        <div key={index} className='border-gray-300 rounded shadow-md'>\n                            <div onClick={() => { handleClickCount(item.id) }}>\n\n                            <div className='border-gray-200'>\n                                <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n                                        <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                            <img src={item.imgurl} className=\"w-full h-full object-cover\" alt={item.title} />\n                    \n                                            <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                                <FetchClickCounts itemId={item.id} />\n                                            </span>\n                                        </div>\n                                    {/* <div className=\"relative h-[170px] w-full md:h-[320px] md:w-full\">\n                                        <Image fill src={item.imgurl} className=\"object-cover\" alt={item.title} sizes=\"(max-width: 600px) 50vw, (max-width: 768px) 100vw, (max-width: 1200px) 50vw\"/>\n                                        <FetchClickCounts itemId={item.id}/>\n\n                                    </div> */}\n                                    <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n                                        {item.title}\n                                    </h2>\n                                </Link>\n                                <div className='tags'>\n                                <Tags tagsArray={tagsArray} numberTags={5}/>\n                                </div>\n                            </div>\n                        </div>\n                </div>\n                    );\n                })}\n            <Pagination \n            totalCount={totalCount} \n            pageSize={pageSize} \n            currentPage={pageNumber} \n            totalPages={totalPages}\n            changePage={changePage}\n            pageChangeUrl={(page) => {\n                return `/tag/${tagpage}/page/${page}`;\n            }}\n            />\n        </div>\n        </div>\n        <Footer />\n    </>\n    );\n};\n\nexport async function getServerSideProps({ params }) {\n    const pageSize = 20;\n    const tagpage = params.tagpage;\n    const pageNumber = params.pageNumber || 1;\n\n    // SSRのためにデータフェッチを直接行う\n    const fetchUrl = `https://api.erorice.com/tag?tag=${tagpage}&page=${pageNumber}&limit=${pageSize}`;\n    const res = await fetch(fetchUrl);\n    const posts = await res.json();\n\n    const totalRes = await fetch(`https://api.erorice.com/tag_count?tag=${tagpage}`);\n    const totalCount = await totalRes.json();\n\n    return {\n    props: {\n        posts,\n        totalCount,\n        tagpage,\n        pageNumber: parseInt(pageNumber),\n        pageSize,\n    }\n    };\n}\n\nexport default TagPage;\n","/Volumes/SSD_1TB/next-antena2/front/src/pages/topSSR.js",["238"],[],"// /Volumes/SSD_1TB/next-antena2/front/src/pages/topSSR.js\n\nimport { useState, useEffect, useMemo } from 'react';\nimport React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport styles from '@/components/iiim.module.css'\nimport Sidebar from '@/components/Sidebar';\nimport Tags from '@/components/Tags';\nimport Pagination from '@/components/Pagination';\nimport { handleClickCount } from '@/lib/clickCountDB';\nimport NewSidebar from '@/components/NewSide';\nimport PopularMovies from '@/components/PopularMovies';\nimport FetchClickCounts from '@/components/Clickcount';\n\nexport default function Ssr({ data, totalCount, page, limit }) {\n\n    const itemIds = useMemo(() => data ? data.map(item => item.id) : [], [data]);\n    const [items, setItems] = useState(itemIds);\n    const [clickCounts, setClickCounts] = useState({});\n\n    if (!data) return null; // Ssrコンポーネントの先頭部分でこのように追加してください。\n\n\n    return (\n\n        <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n            <Sidebar />\n            <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n                {data.map((item, index) => {\n                    let date = item.published_at ? new Date(item.published_at) : null;\n                    let formattedDate = \"\";\n    \n                    if (date && !isNaN(date.getTime())) { // Check if date is valid\n                        formattedDate = new Intl.DateTimeFormat('ja-JP', {\n                            year: 'numeric', month: '2-digit', day: '2-digit',\n                            hour: '2-digit', minute: '2-digit', second: '2-digit'\n                        }).format(date);\n                    } else {\n                        console.error(\"Invalid date: \", item.published_at);\n                    }\n                    let tagsArray = [];\n                    if (item.tag) { // Check if tag exists\n                        tagsArray = item.tag.split(',').map(tag => tag.trim());\n                    }\n                    return (\n                        <div key={index} className='border-gray-300 rounded-lg shadow-lg'>\n                            <div className=' border-gray-200 '>\n                                <div onClick={() => { handleClickCount(item.id) }}>\n                                    <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n                                        <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n                                            <img src={item.imgurl} className=\"w-full h-full object-cover\" alt={item.title} />\n                    \n                                            <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n                                                <FetchClickCounts itemId={item.id} />\n                                            </span>\n                                        </div>\n                    \n                                        <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n                                            {item.title}\n                                        </h2>\n                                    </Link>\n                                </div>\n                                <div className='tags'>\n                                    <Tags tagsArray={tagsArray} numberTags={5} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                    \n                })}\n                <Pagination totalCount={totalCount} pageSize={limit} currentPage={page} pageChangeUrl={(page) => `/page/${page}`} />\n            </div>\n        </div>\n    );\n}\n\n    \n    // useEffect(() => {\n    //     const fetchClickCounts = async () => {\n    //         const response = await fetch('https://api.erorice.com/click_counts', {\n    //             method: 'POST',\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             },\n    //             body: JSON.stringify(itemIds), \n    //         });\n    \n    //         if (!response.ok) {\n    //             console.error(`Error fetching click counts: ${response.status} ${response.statusText}`);\n    //             return;\n    //         }\n    \n    //         const initialClickCounts = await response.json();\n    //         setClickCounts(initialClickCounts);\n    //     };\n    \n    //     if (Array.isArray(itemIds) && itemIds.every(Number.isInteger)) {\n    //         fetchClickCounts();\n    //     } else {\n    //         console.error(\"itemIds must be an array of integers\", itemIds);\n    //     }\n    // }, [itemIds]);\n    \n\n    // console.log('ID一覧',itemIds);\n    // console.log('クリックカウント数',clickCounts);\n    // console.log('clickCountsの型:', typeof clickCounts);\n\n    // return (\n\n    //     <div className='container mx-auto flex flex-col-reverse md:flex-row p-5 justify-between md:justify-start'>\n    //         <Sidebar />\n    //         <div className=\"md:w-3/4 md:ml-4 grid sm:grid-cols-1 md:grid-cols-2 gap-3 p-1 order-2 md:order-2\">\n    //             {data.map((item, index) => {\n    //                 let date = item.published_at ? new Date(item.published_at) : null;\n    //                 let formattedDate = \"\";\n    \n    //                 if (date && !isNaN(date.getTime())) { // Check if date is valid\n    //                     formattedDate = new Intl.DateTimeFormat('ja-JP', {\n    //                         year: 'numeric', month: '2-digit', day: '2-digit',\n    //                         hour: '2-digit', minute: '2-digit', second: '2-digit'\n    //                     }).format(date);\n    //                 } else {\n    //                     console.error(\"Invalid date: \", item.published_at);\n    //                 }\n    //                 let tagsArray = [];\n    //                 if (item.tag) { // Check if tag exists\n    //                     tagsArray = item.tag.split(',').map(tag => tag.trim());\n    //                 }\n    //                 return (\n    //                     <div key={index} className='border-gray-300 rounded-lg shadow-lg'>\n    //                         <div className=' border-gray-200 '>\n    //                             <div onClick={() => {handleClickCount(item.id)}}>\n    //                             <Link href=\"/[siteId]/[itemId]\" as={`/${item.site_id}/${item.id}`}>\n    //                             <div className=\"relative h-[270px] w-full md:h-[320px] md:w-full\">\n    //                                 <Image fill src={item.imgurl} className={styles.image} alt={item.title} priority />\n    //                                 {/* <img src={item.imgurl} className={styles.image} alt={item.title} /> */}\n\n\n    //                                 <span className=\"absolute rounded-md top-2 left-2 bg-white bg-opacity-90 text-red-600 text-xl font-bold tracking-widest text-center p-1\">\n    //                                     <FetchClickCounts itemId={item.id}/>\n    //                                 </span>\n                                    \n    //                             </div>\n                                    \n    //                                 <h2 className='m-2 text-sm md:text-xl font-bold text-blue-600'>\n    //                                     {item.title}\n    //                                 </h2>\n    //                             </Link>\n    //                             </div>\n    //                             <div className='tags'>\n    //                             <Tags tagsArray={tagsArray} numberTags={5}/>\n    //                             </div>\n    //                         </div>\n    //                     </div>\n    //                 );\n    //             })}\n    //             <Pagination totalCount={totalCount} pageSize={limit} currentPage={page} pageChangeUrl={(page) => `/page/${page}`} />\n    //         </div>\n    //     </div>\n    // );","/Volumes/SSD_1TB/next-antena2/front/src/store/dataSlice.js",[],[],"/Volumes/SSD_1TB/next-antena2/front/src/store/store.js",[],[],{"ruleId":"239","severity":1,"message":"240","line":44,"column":37,"nodeType":"241","endLine":44,"endColumn":128},{"ruleId":"239","severity":1,"message":"240","line":45,"column":39,"nodeType":"241","endLine":45,"endColumn":120},{"ruleId":"239","severity":1,"message":"240","line":93,"column":24,"nodeType":"241","endLine":93,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":93,"column":24,"nodeType":"241","endLine":93,"endColumn":50},{"ruleId":"239","severity":1,"message":"240","line":78,"column":49,"nodeType":"241","endLine":78,"endColumn":130},{"ruleId":"239","severity":1,"message":"240","line":77,"column":49,"nodeType":"241","endLine":77,"endColumn":130},{"ruleId":"239","severity":1,"message":"240","line":72,"column":45,"nodeType":"241","endLine":72,"endColumn":126},{"ruleId":"239","severity":1,"message":"240","line":70,"column":45,"nodeType":"241","endLine":70,"endColumn":126},{"ruleId":"239","severity":1,"message":"240","line":52,"column":45,"nodeType":"241","endLine":52,"endColumn":126},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]